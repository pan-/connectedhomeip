{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "QRCode Tests",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/default/src/setup_payload/tests/TestQRCode",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "preLaunchTask": "Build QRCode Payload Tests",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "CHIP crypto Tests",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/default/src/crypto/tests/TestCrypto",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "preLaunchTask": "Build & Run Crypto Tests",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "CHIP openSSL Tests",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/default/src/crypto/tests/TestCryptoPAL",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "preLaunchTask": "Build openSSL crypto Tests",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "LightingApp (Linux)",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/out/lighting-app/chip-lighting-app",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "preLaunchTask": "Build Lighting App (Linux)",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Shell Mbed Example Debug [local]",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/examples/shell/mbed/build-${input:mbedTarget}/chip-mbed-shell-example",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceRoot}/examples/shell/mbed",
            "environment": [],
            "externalConsole": false,
            "debugServerArgs": "",
            "serverLaunchTimeout": 20000,
            "filterStderr": true,
            "filterStdout": false,
            "serverStarted": "GDB\\ server\\ started",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            },
            "setupCommands": [
                {
                    "text": "-target-select remote localhost:3333",
                    "description": "connect to target",
                    "ignoreFailures": false
                },
                {
                    "text": "-file-exec-and-symbols ${workspaceRoot}/examples/shell/mbed/build-${input:mbedTarget}/chip-mbed-shell-example",
                    "description": "load file",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor reset\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor halt\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor arm semihosting enable\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-target-download",
                    "description": "flash target",
                    "ignoreFailures": false
                }
            ],
            "linux": {
                "MIMode": "gdb",
                "MIDebuggerPath": "arm-none-eabi-gdb",
                "debugServerPath": "pyocd-gdbserver",
                "debugServerArgs": "" // [-t <stm32l475xg | nrf52840>]
            }
        },
        {
            "name": "Shell Mbed Example Debug [remote]",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/examples/shell/mbed/build-${input:mbedTarget}/chip-mbed-shell-example",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceRoot}/examples/shell/mbed",
            "environment": [],
            "externalConsole": false,
            "debugServerArgs": "",
            "serverLaunchTimeout": 20000,
            "filterStderr": true,
            "filterStdout": false,
            "serverStarted": "GDB\\ server\\ started",
            "setupCommands": [
                {
                    "text": "-target-select remote host.docker.internal:3333",
                    "description": "connect to target",
                    "ignoreFailures": false
                },
                {
                    "text": "-file-exec-and-symbols ${workspaceRoot}/examples/shell/mbed/build-${input:mbedTarget}/chip-mbed-shell-example",
                    "description": "load file",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor reset\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor halt\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor arm semihosting enable\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-target-download",
                    "description": "flash target",
                    "ignoreFailures": false
                }
            ],
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            },
            "linux": {
                "MIMode": "gdb",
                "MIDebuggerPath": "arm-none-eabi-gdb"
            }
        }
    ],
    "inputs": [
        {
            "type": "pickString",
            "id": "mbedTarget",
            "description": "What mbed target will be used?",
            "options": ["NRF52840_DK", "DISCO_L475VG_IOT01A"],
            "default": "NRF52840_DK"
        }
    ]
}
